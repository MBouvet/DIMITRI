;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      GREAT_CIRCLE_DISTANCE       
;* 
;* PURPOSE:
;*      RETURNS THE HAVERSINE GREAT CIRCLE DISTANCE OVER THE EARTH BETWEEN 2 POINTS
;* 
;* CALLING SEQUENCE:
;*      RES = GREAT_CIRCLE_DISTANCE(LAT1,LON1,LAT2,LON2)      
;* 
;* INPUTS:
;*      LAT1 = A FLOAT OF THE LATITUDE FOR POINT 1 (IN RADIANS UNLESS DEGREE KEYWORD SET)
;*      LON1 = A FLOAT OF THE LONGITUDE FOR POINT 1 (IN RADIANS UNLESS DEGREE KEYWORD SET)
;*      LAT2 = A FLOAT OF THE LATITUDE FOR POINT 2 (IN RADIANS UNLESS DEGREE KEYWORD SET)
;*      LON2 = A FLOAT OF THE LONGITUDE FOR POINT 2 (IN RADIANS UNLESS DEGREE KEYWORD SET)
;* KEYWORDS:
;*      DEGREES  - SET TO INDICATE THAT THE VALUES PROVIDED ARE IN DEGREES AND NOT RADIANS
;*      VERBOSE  - PROCESSING STATUS OUTPUTS
;*
;* OUTPUTS:
;*      DISTANCE  - A FLOAT OF THE DISTANCE (KM) BETWEEN THE PROVIDED POINTS
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*      17 JAN 2011 - C KENT   - DIMITRI-2 V1.0
;*      27 FEB 2012 - C KENT   - UPDATED FORMULA TO ALLOW ARRAY PROCESSING
;*      06 MAR 2012 - C KENT   - OPTIMISED CODE FOR FASTER PERFORMANCE
;*
;* VALIDATION HISTORY:
;*      14 APR 2011 - C KENT   - WINDOWS 32-BIT IDL 7.1 AND LINUX 64-BIT IDL 8.0 NOMINAL
;*                               COMPILATION AND OPERATION 
;*      27 FEB 2012 - C KENT   - NO CHANGE IN DISTANCE VALUES 
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION GREAT_CIRCLE_DISTANCE,LATA,LONA,LATB,LONB,DEGREES=DEGREES,VERBOSE=VERBOSE

    LAT1 = LATA 
    LON1 = LONA
    LAT2 = LATB
    LON2 = LONB

  IF KEYWORD_SET(DEGREES) THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT,'GREAT_CIRCLE_DISTANCE: CONVERTING VALUES TO RADIANS'
    LAT1 = LAT1*!DTOR & LON1 = LON1*!DTOR
    LAT2 = LAT2*!DTOR & LON2 = LON2*!DTOR
  ENDIF 

  LIM = 1
  ID  = 0
  IF N_ELEMENTS(LAT1) EQ LIM THEN LAT1=LAT1[ID]
  IF N_ELEMENTS(LON1) EQ LIM THEN LON1=LON1[ID]
  IF N_ELEMENTS(LAT2) EQ LIM THEN LAT2=LAT2[ID]
  IF N_ELEMENTS(LON2) EQ LIM THEN LON2=LON2[ID]  

  IF KEYWORD_SET(VERBOSE) THEN PRINT,'GREAT_CIRCLE_DISTANCE: COMPUTING DISTANCE BETWEEN POINTS'
  R_EARTH   = 6371.0
  DLAT      = FLOAT(LAT2)-FLOAT(LAT1)
  DLON      = FLOAT(LON2)-FLOAT(LON1)
  ALPHA     = (SIN(DLAT/2))^2+COS(LAT1)*COS(LAT2)*(SIN(DLON/2))^2
  CONST     = ASIN(SQRT(ALPHA)) ; ALLOWS ARRAY PROCESSING 
  DISTANCE  = (2.*R_EARTH)*CONST  

  IF KEYWORD_SET(VERBOSE) THEN PRINT,'GREAT_CIRCLE_DISTANCE: RETURNING COMPUTED DISTANCE'
  RETURN,DISTANCE

END    