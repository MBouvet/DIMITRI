;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      ROUJEAN_BRDF_KERNEL_F1       
;* 
;* PURPOSE:
;*      RETURNS THE 1ST ROUJEAN BRDF COEFICIENT
;* 
;* CALLING SEQUENCE:
;*      RES = ROUJEAN_BRDF_KERNEL_F1(K2_SZA,K2_VZA,K2_RAA)      
;* 
;* INPUTS:
;*      K2_SZA    - A SCALAR OR ARRAY OF SOLAR ZENITH VALUES IN RADIANS FOR COMPUTATION
;*      K2_VZA    - A SCALAR OR ARRAY OF VIEWING ZENITH VALUES IN RADIANS FOR COMPUTATION
;*      K2_RAA    - A SCALAR OR ARRAY OF RELATIVE AZIMUTH VALUES IN RADIANS FOR COMPUTATION
;*
;* KEYWORDS:
;*      DEGREES   - SET TO INDICATE INPUT ANGLES ARE DEGREES AND NOT RADIANS AS EXPECTED      
;*      VERBOSE   - PROCESSING STATUS OUTPUTS
;*
;* OUTPUTS:
;*      KERNEL_F1 - A FLOAT OF 1ST ROUJEAN COEFICIENT
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*      22 MAR 2007 - M BOUVET - PROTOTYPE DIMITRI VERSION
;*      24 JAN 2011 - C KENT   - DIMITRI-2 V1.0
;*
;* VALIDATION HISTORY:
;*      15 APR 2011 - C KENT   - WINDOWS 32-BIT IDL 7.1 AND LINUX 64-BIT IDL 8.0 NOMINAL
;*                               COMPILATION AND OPERATION. TESTED ON MERIS 2ND REPROCESSING 
;*                               WITH MERIS 3RD REPROCESSING AND MODISA COLLECTION 5
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION ROUJEAN_BRDF_KERNEL_F1,K1_SZA,K1_VZA,K1_RAA,DEGREES=DEGREES,VERBOSE=VERBOSE

  IF KEYWORD_SET(VERBOSE) THEN PRINT,'ROUJEAN_BRDF_KERNEL_F1: STARTING ROUJEAN COMPUTATION'

;-----------------------------------------
; TURN INPUT ANGLES INTO RADIANS IF NEEDED

  IF KEYWORD_SET(DEGREES) THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT,'ROUJEAN_BRDF_KERNEL_F1: DEGREES KEYWORD SET'
    SZA_RD = K1_SZA*!DTOR
    VZA_RD = K1_VZA*!DTOR
    TEMP   = WHERE(ABS(K1_RAA) GT 180.0)
    IF TEMP[0] GT -1 THEN K1_RAA[TEMP] = 360.0-K1_RAA[TEMP]
    RAA_RD = K1_RAA*!DTOR
  ENDIF ELSE BEGIN
    SZA_RD = K1_SZA
    VZA_RD = K1_VZA 
    TEMP   = WHERE(ABS(K1_RAA) GT 2*(!DPI))
    IF TEMP[0] GT -1 THEN K1_RAA[TEMP] = 2*(!DPI)-K1_RAA[TEMP]
    RAA_RD = K1_RAA
  ENDELSE

;-----------------------------------------
; COMPUTE THE ROUJEAN KERNEL F2 VALUE

  AIRMASS         = 1./COS(SZA_RD)+1./COS(VZA_RD)
  DELTA           = SQRT(TAN(SZA_RD)*TAN(SZA_RD)+TAN(VZA_RD)*TAN(VZA_RD)-2. *TAN(VZA_RD)*TAN(SZA_RD)*COS(RAA_RD))
  SCATT_ANGLE_RD  = ACOS(COS(SZA_RD)*COS(VZA_RD)+SIN(SZA_RD)*SIN(RAA_RD)   *COS(RAA_RD))
  KERNEL_F1       = 1./2./!DPI*((!DPI-RAA_RD)*COS(RAA_RD)+SIN(RAA_RD))*TAN(SZA_RD)*TAN(VZA_RD)
  KERNEL_F1       = KERNEL_F1-1./!DPI*(TAN(SZA_RD)+TAN(VZA_RD)+DELTA)

;-----------------------------------------
; RETURN THE KERNEL VALUE

  IF KEYWORD_SET(VERBOSE) THEN PRINT,'ROUJEAN_BRDF_KERNEL_F1: RETURNING THE ROUJEAN F1 VALUE'  
  RETURN, KERNEL_F1

END