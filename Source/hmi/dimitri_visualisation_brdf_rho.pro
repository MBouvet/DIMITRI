;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      DIMITRI_VISUALISATION_BRDF_RHO     
;* 
;* PURPOSE:
;*      THIS PROGRAM AUTOMATICALLY SERACHES AND RETRIEVES THE SIMULATED RHO VALUES 
;*      OUTPUT BY DIMITRI GIVEN AN OUTPUT FOLDER AND REFERENCE SENSOR CONFIGURATION.
;* 
;* CALLING SEQUENCE:
;*      RES = DIMITRI_VISUALISATION_BRDF_RHO(SR_FOLDER,SR_REGION,REF_SENSOR, $
;*                                            REF_PROC_VER,DIMITRI_BAND)      
;*
;* INPUTS:
;*      SR_FOLDER     - A STRING OF THE FULL PATH FOR THE DOUBLET_EXTRACTION OUTPUT FOLDER
;*      SR_REGION     - A STRING OF THE DIMITRI VALIDATION SITE REQUESTED
;*
;* KEYWORDS:
;*      VERBOSE - PROCESSING STATUS OUTPUTS
;*
;* OUTPUTS:
;*      A STRUCTURE WITH THE FOLLOWING TAGS:
;*      ERROR             - THE ERROR STATUS CODE, 0 = NOMINAL, 1 OR -1 = ERROR
;*      DATA              - AN ARRAY CONTAINING ALL POLYNOMINAL DATA
;*      NUM_SENS_CONFIGS  - THE NUMBER OF FOUND VIEWING GEOMETRY CONFIGURATIONS
;*      SENSOR_CONFIGS    - A STRING ARRAY OF THE VIEWING GEOMTRY CONFIGURATIONS
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*      09 FEB 2011 - C KENT    - DIMITRI-2 V1.0
;*
;* VALIDATION HISTORY:
;*      09 FEB 2011 - C KENT    - WINDOWS 32-BIT MACHINE IDL 7.1/IDL 8.0: NOMINAL 
;*      14 APR 2011 - C KENT    - WINDOWS 32-BIT IDL 7.1 AND LINUX 64-BIT IDL 8.0 NOMINAL
;*                               COMPILATION AND OPERATION
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION DIMITRI_VISUALISATION_BRDF_RHO,SR_FOLDER,SR_REGION,REF_SENSOR,REF_PROC_VER,DIMITRI_BAND

  IF KEYWORD_SET(VERBOSE) THEN PRINT,'DIMITRI_VISU_BRDF: STARTING RETRIEVAL OF SIMULATED DATA'

;--------------------------------
; FIND ALL CORRESPONDING TOA 
; SIMULATION FILES 

  IF KEYWORD_SET(VERBOSE) THEN PRINT,'DIMITRI_VISU_BRDF: SEARCHING FOR SIMULATED DATA'
  RHO_STR   = STRING('ROUJEAN_TOA_SPECTRUM_'+SR_REGION+'_'+REF_SENSOR+'_'+REF_PROC_VER+'*.dat')
  RHO_FILES = FILE_SEARCH(SR_FOLDER,RHO_STR)

  IF KEYWORD_SET(VERBOSE) THEN PRINT,'DIMITRI_VISU_BRDF: DEFINING ARRAY TO HOLD ALL DATA'  
  NB_BRDF_CONFIGS = N_ELEMENTS(RHO_FILES)
  NB_X            = 7300
  BRDF_RHO        = MAKE_ARRAY(NB_X,NB_BRDF_CONFIGS,2,/DOUBLE)
  BRDF_CONFIGS    = STRARR(NB_BRDF_CONFIGS)
  MAX_X           = 0

;-------------------------------- 
; IF NO simulated DATA FOUND 
; THEN RETURN
  
  IF STRCMP(RHO_FILES[0],'') EQ 1 THEN BEGIN
    PRINT, 'DIMITRI_VISU_BRDF: NO DATA FOUND, RETURNING'
    RETURN,{ERROR:1,DATA:BRDF_RHO,NUM_SENS_CONFIGS:NB_BRDF_CONFIGS,SENSOR_CONFIGS:BRDF_CONFIGS}
  ENDIF

;--------------------------------  
; GET RELATED SENSOR INDEX BASED 
; ON DIMITRI BAND ID

  IF KEYWORD_SET(VERBOSE) THEN SENSOR_INDEX = GET_SENSOR_BAND_INDEX(REF_SENSOR,DIMITRI_BAND,/VERBOSE) $
    ELSE SENSOR_INDEX = GET_SENSOR_BAND_INDEX(REF_SENSOR,DIMITRI_BAND)

;-------------------------------- 
; LOOP OVER EACH FILE, EXTRACT THE 
; VIEWING GEOMETRY CONFIGURATION 
; AND STORE THE SORTED DATE AND 
; REFLECTANCE INFORMATION

  IF KEYWORD_SET(VERBOSE) THEN PRINT,'DIMITRI_VISU_BRDF: STARTING LOOP TO RESTORE SIMULATED DATA'
  FOR I=0,NB_BRDF_CONFIGS-1 DO BEGIN

    POS             = STRPOS(RHO_FILES[I],REF_PROC_VER,/REVERSE_SEARCH)+STRLEN(REF_PROC_VER)+1
    POS_END         = STRPOS(RHO_FILES[I],'.dat',/REVERSE_SEARCH)
    BRDF_CONFIGS[I] = STRMID(RHO_FILES[I],POS,POS_END-POS)

    RESTORE,RHO_FILES[I]
    TEMP_DATE = TOA_SPECTRUM[0,*]
    TEMP_RHO  = TOA_SPECTRUM[4+SENSOR_INDEX,*]
    SORT_IDX  = SORT(TEMP_DATE)
    TMP       = N_ELEMENTS(TEMP_DATE)
    IF TMP GT MAX_X THEN MAX_X = TMP

    BRDF_RHO[0:TMP-1,I,0] = TEMP_DATE[SORT_IDX]
    BRDF_RHO[0:TMP-1,I,1] = TEMP_RHO[SORT_IDX]

  ENDFOR

;-------------------------------- 
; CUT DOWN THE DATA ARRAY TO THE 
; MAXIMUM DATE RANGE

  BRDF_RHO = BRDF_RHO[0:MAX_X-1,*,*]

;-------------------------------- 
; RETURN THE TOA RHO ARRAY

  IF KEYWORD_SET(VERBOSE) THEN PRINT,'DIMITRI_VISU_BRDF: RETURNING SIMULATED DATA STRUCTURE' 
  VISU_BRDF = {                                             $
              ERROR:0                                      ,$
              DATA:BRDF_RHO                                ,$
              NUM_SENS_CONFIGS:NB_BRDF_CONFIGS             ,$
              SENSOR_CONFIGS:BRDF_CONFIGS                  $
              }

  RETURN,VISU_BRDF

END
