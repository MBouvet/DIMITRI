;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      GET_MODISA_L1B_RADIANCE       
;* 
;* PURPOSE:
;*      RETURNS THE L1B RADIANCE FOR A SPECIFIC MODISA BAND
;* 
;* CALLING SEQUENCE:
;*      RES = GET_MODISA_L1B_RADIANCE(FILENAME,IN_BAND,RESOLUTION)      
;* 
;* INPUTS:
;*      FILENAME - A SCALAR CONTAINING THE FILENAME OF THE PRODUCT FOR RADIANCE EXTRACTION 
;*      IN_BAND  - THE BAND INDEX TO BE RETRIEVED WITHIN THE RESOLUTION DATA SET
;*      RESOLUTION - A KEYWORD INDICATING WHICH RESOLUTION TO BE EXTRACTED (1KM IF NOT PROVIDED)
;*
;* KEYWORDS:
;*      VERBOSE      - PROCESSING STATUS OUTPUTS
;*      RES_1KM      - INDICATES THAT THE IN_BAND INDEX REFERS TO THE 1KM DATASET
;*      RES_500M     - INDICATES THAT THE IN_BAND INDEX REFERS TO THE 500M DATASET
;*      RES_250M     - INDICATES THAT THE IN_BAND INDEX REFERS TO THE 250M DATASET
;*
;* OUTPUTS:
;*      L1B_RAD      - TOA RADIANCE FOR PRODUCT FOLLOWING USE OF SCALING FACTOR 
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*                    M BOUVET - PROTOTYPE DIMITRI VERSION
;*      04 DEC 2010 - C KENT   - DIMITRI-2 V1.0
;*      14 DEC 2010 - C KENT   - UPDATED TO REQUIRE INPUT BAND
;*      24 AUG 2011 - C KENT   - UPDATED EXCEPTION HANDLING AND OPTIMISED CODE
;*
;* VALIDATION HISTORY:
;*      14 DEC 2010 - C KENT    - WINDOWS 32-BIT MACHINE IDL 7.1: COMPILATION SUCCESSFUL, 
;*                                RESULTS EQUAL TO BEAM VISAT 4.8 
;*      05 JAN 2011 - C KENT    - LINUX 64-BIT MACHINE IDL 8.0: COMPILATION SUCCESSFUL, 
;*                                NO APPARENT DIFFERENCES WHEN COMPARED TO WINDOWS MACHINE
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION GET_MODISA_L1B_RADIANCE,FILENAME,IN_BAND,VERBOSE=VERBOSE,RES_1KM=RES_1KM,RES_500M=RES_500M,RES_250M=RES_250M

;------------------------------------------------
; CHECK KEYWORDS

  TEMP = N_ELEMENTS(RES_1KM)+N_ELEMENTS(RES_500M)+N_ELEMENTS(RES_250M)
  IF TEMP EQ 0 THEN BEGIN
    PRINT, 'MODISA L1B REFLECTANCE: NO RESOLUTION SPECIFIED, USING DEFAULT OF 1KM'
    RES_1KM = [1]
  ENDIF
  IF TEMP GT 1 THEN BEGIN
    PRINT, 'MODISA L1B REFLECTANCE: ERROR, MULTIPLE RESOLUTIONS SELECTED'
    RETURN,-1
  ENDIF

;------------------------------------------------
; CHECK FILENAME AND IN_BAND ARE NOMINAL

  IF FILENAME EQ '' THEN BEGIN
    PRINT, 'MODISA L1B REFLECTANCE: ERROR, INPUT FILENAME INCORRECT'
    RETURN,-1
  ENDIF
 
;------------------------------------------------ 
; START THE SD INTERFACE AND OPEN THE PRODUCT 
  
  MODBAD = 32767
  HDF_ID = HDF_SD_START(FILENAME,/READ) 

  IF N_ELEMENTS(RES_1KM)  GT 0 THEN  SDNAME = 'EV_1KM_RefSB'
  IF N_ELEMENTS(RES_500M) GT 0 THEN  SDNAME = 'EV_500_Aggr1km_RefSB'
  IF N_ELEMENTS(RES_250M) GT 0 THEN  SDNAME = 'EV_250_Aggr1km_RefSB'

  SDS_NAME = HDF_SD_NAMETOINDEX(HDF_ID,SDNAME)
  SDS_ID=HDF_SD_SELECT(HDF_ID,SDS_NAME)
  HDF_SD_GETDATA,SDS_ID,TOA_REFL_COUNTS

  ATTR_INDX = HDF_SD_ATTRFIND(SDS_ID, 'radiance_scales')
  HDF_SD_ATTRINFO, SDS_ID, ATTR_INDX, DATA=TOA_REFL_SLOPES

  ATTR_INDX = HDF_SD_ATTRFIND(SDS_ID, 'radiance_offsets')
  HDF_SD_ATTRINFO, SDS_ID, ATTR_INDX, DATA=TOA_REFL_OFFSET  
  HDF_SD_ENDACCESS, SDS_ID
 
;-----------------------------------------------
; CLOSE THE PRODUCT AND SD INTERFACE

  HDF_SD_END,HDF_ID  

  TOA_REFL_COUNTS = TOA_REFL_COUNTS[*,*,IN_BAND]
  TOA_REFL = FLOAT(TOA_REFL_COUNTS)
  TOA_REFL_COUNTS = 0
  TEMP_DIMS = SIZE(TOA_REFL)
  VALID = WHERE(TOA_REFL LT MODBAD,COUNT)
  IF COUNT GT 0 THEN TOA_REFL[VALID] = TOA_REFL_SLOPES[IN_BAND]*(TOA_REFL[VALID]-TOA_REFL_OFFSET[IN_BAND])

;-----------------------------------------------  
;  RETURN,L1B_RAD ;NOTE, THIS IS RHO*SZA
  
  RETURN,TOA_REFL
 
END
