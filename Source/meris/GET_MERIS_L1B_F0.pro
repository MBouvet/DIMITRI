;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      GET_MERIS_L1B_F0       
;* 
;* PURPOSE:
;*      RETURNS THE SOLAR IRRADIANCE FROM A MERIS PRODUCT. NOTE, THIS IS NOT CORRECT 
;*      FOR THE EARTH SUN DISTANCE
;* 
;* CALLING SEQUENCE:
;*      RES = GET_MERIS_L1B_F0(FILENAME)      
;* 
;* INPUTS:
;*      FILENAME - FULL PATH OF THE FILE TO BE ANALYSED            
;*
;* KEYWORDS:
;*      ENDIAN_SIZE - MACHINE ENDIAN SIZE (0: LITTLE, 1: BIG)
;*      VERBOSE     - PROCESSING STATUS OUTPUTS
;*
;* OUTPUTS:
;*      F0          - A FLOAT ARRAY OF F0 VALUES
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*      04 APR 2004 - M BOUVET - PROTOTYPE DIMITRI VERSION
;*      17 NOV 2010 - C KENT   - DIMITRI-2 V1.0
;*      20 NOV 2010 - C KENT   - UPDATED TO ALLOW SINGULAR USAGE (REMOVED COMMON BLOCKS)
;*      22 NOV 2010 - C KENT   - ADDED VERBOSE KEYWORD OPTION
;*      02 DEC 2010 - C KENT   - UPDATED HEADER INFORMATION
;*
;* VALIDATION HISTORY:
;*      01 DEC 2010 - C KENT   - WINDOWS 32-BIT MACHINE idl 7.1: COMPILATION SUCCESSFUL,
;*                               VERY SMALL DIFFERENCE COMPARED TO BEAM DUE TO ROUNDING
;*      05 JAN 2010 - C KENT   - LINUX 64-BIT MACHINE IDL 8.0: COMPILATION SUCCESSFUL,
;*                               NO DIFFERENCES OBSERVED AGAINST WINDOWS 32-BIT MACHINE
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION GET_MERIS_L1B_F0,FILENAME,ENDIAN_SIZE=ENDIAN_SIZE,VERBOSE=VERBOSE

;------------------------------------------------
; CHECK FILENAME IS A NOMINAL INPUT

  IF FILENAME EQ '' THEN BEGIN
    PRINT, 'MERIS L1B F0: ERROR, INPUT FILENAME INCORRECT'
    RETURN,-1
  ENDIF

;------------------------------------------------
; IF ENDIAN SIZE NOT PROVIDED THEN GET VALUE

  IF N_ELEMENTS(ENDIAN_SIZE) EQ 0 THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN BEGIN
    PRINT, 'MERIS L1B F0: NO ENDIAN SIZE PROVIDED, RETRIEVING...'
    ENDIAN_SIZE = GET_ENDIAN_SIZE(/VERBOSE)
    ENDIF ELSE ENDIAN_SIZE = GET_ENDIAN_SIZE()
  ENDIF
  
;------------------------------------------------
; DEFINE THE NUMBER OF MERIS BANDS

  NB_BANDS = 15  

;------------------------------------------------
;DEFINE HEADER VARIABLES

  MPH_SIZE = 1247
  SPH_SIZE = 9942
  FILE_MPH = BYTARR(MPH_SIZE)
  FILE_SPH = BYTARR(SPH_SIZE)
  
;-----------------------------------------------
; OPEN THE FILE AND EXTRACT HEADER

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS L1B F0: OPENING PRODUCT'
  OPENR,PRD_F0,FILENAME,/GET_LUN
  READU,PRD_F0,FILE_MPH
  READU,PRD_F0,FILE_SPH

;-----------------------------------------------
; RETRIEVE: POSITION OF DSD, DSD,OFFSET,DS_SIZE,NUMBER OF RECORDS, RECORD SIZE

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS L1B F0: RETRIEVING DSD INFORMATION'
  F0_DSD_POS =STRPOS(FILE_SPH,'"Scaling Factor GADS         "')
  F0_DSD=STRMID(FILE_SPH, F0_DSD_POS,280)
  F0_OFFSET = STRMID(F0_DSD, strpos(F0_DSD, 'DS_OFFSET=+')+11,20)+0L
  F0_SIZE = STRMID(F0_DSD, strpos(F0_DSD, 'DS_SIZE=+')+9,10)+0L
  F0_DSR_NUMBER = STRMID(F0_DSD, strpos(F0_DSD, 'NUM_DSR=+')+9,20)+0L
  F0_DSR_SIZE = STRMID(F0_DSD, strpos(F0_DSD, 'DSR_SIZE=+')+10,20)+0L

;-----------------------------------------
; DEFINE VARIABLE TO HOLD F0 DATA

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS L1B F0: DEFINING DATA ARRAYS FOR OUTPUT'
  F0 = FLTARR(NB_BANDS)
  NODATA = BYTARR(172)

;-----------------------------------------
; POINT TO THE GADS AND READ THE DATA

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS L1B F0: EXTRACTING DATA'
  POINT_LUN,PRD_F0,F0_OFFSET
  READU,PRD_F0,NODATA
  READU,PRD_F0,F0

;---------------------------------------
; CLOSE THE FILE

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS L1B F0: CLOSING PRODUCTS AND RELEASING THE LUN'
  CLOSE, PRD_F0
  FREE_LUN, PRD_F0

;----------------------------------------
; SWAP ENDIAN IF NEEDED - MERIS DATA IS BIG ENDIAN
  
  IF ENDIAN_SIZE EQ 0 THEN BEGIN
      F0 = SWAP_ENDIAN(F0)
  ENDIF

;---------------------------------------
; RETURN THE F0 DATA FOR ALL BANDS

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS L1B F0: RETURNING MERIS F0'
  RETURN, F0

END
