;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      GET_MERIS_L1B_RADIANCE       
;* 
;* PURPOSE:
;*      RETURNS THE L1B RADIANCE FOR A SPECIFIC MERIS BAND
;* 
;* CALLING SEQUENCE:
;*      RES = GET_MERIS_L1B_RADIANCE(FILENAME,IN_BAND)      
;* 
;* INPUTS:
;*      FILENAME - A SCALAR CONTAINING THE FILENAME OF THE PRODUCT FOR RADIANCE EXTRACTION 
;*      IN_BAND  - THE INDEX OF RADIANCE BAND TO BE RETURNED, STARTS FROM 0   
;*
;* KEYWORDS:
;*      ENDIAN_SIZE - MACHINE ENDIAN SIZE (0: LITTLE, 1: BIG)
;*      VERBOSE     - PROCESSING STATUS OUTPUTS
;*
;* OUTPUTS:
;*      L1B_RAD     - TOA RADIANCE FOR IN_BAND FOLLOWING USE OF SCALING FACTOR 
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*      17 NOV 2005 - M BOUVET - PROTOTYPE DIMITRI VERSION
;*      17 NOV 2010 - C KENT   - DIMITRI-2 V1.0
;*      20 NOV 2010 - C KENT   - UPDATED TO ALLOW SINGULAR USAGE (REMOVED COMMON BLOCKS)
;*      22 NOV 2010 - C KENT   - ADDED VERBOSE KEYWORD OPTION
;*      01 DEC 2010 - C KENT   - ADDED FILENAME AND IN_BAND ERROR CATCHING
;*      02 DEC 2010 - C KENT   - UPDATED HEADER INFORMATION
;*      23 DEC 2010 - C KENT   - CHANGED LAT LINE TO DOUBLE ARRAYS DUE TO DIFFERENCES 
;*                               BETWEEN WINDOWS/LINUX
;*
;* VALIDATION HISTORY:
;*      01 DEC 2010 - C KENT   - WINDOWS 32-BIT MACHINE idl 7.1: COMPILATION SUCCESSFUL,
;*                               BAND RADIANCE EQUAL TO BEAM VISAT FOR MERIS L1B DATA
;*      05 JAN 2010 - C KENT   - LINUX 64-BIT MACHINE IDL 8.0: COMPILATION SUCCESSFUL,
;*                               NO DIFFERENCES OBSERVED AGAINST WINDOWS 32-BIT MACHINE
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION GET_MERIS_L1B_RADIANCE,FILENAME,IN_BAND,ENDIAN_SIZE=ENDIAN_SIZE,VERBOSE=VERBOSE

;------------------------------------------------
; CHECK FILENAME AND IN_BAND ARE NOMINAL

  IF FILENAME EQ '' THEN BEGIN
    PRINT, 'MERIS L1B RADIANCE: ERROR, INPUT FILENAME INCORRECT'
    RETURN,-1
  ENDIF
 
  IF N_ELEMENTS(IN_BAND) NE 1 OR $
      IN_BAND[0] LT 0 OR $
      IN_BAND[0] GT 14 THEN BEGIN
    PRINT, 'MERIS L1B RADIANCE: ERROR, INPUT IN_BAND INCORRECT'
    RETURN,-1
  ENDIF 
  
;------------------------------------------------
; IF ENDIAN SIZE NOT PROVIDED THEN GET VALUE

  IF N_ELEMENTS(ENDIAN_SIZE) EQ 0 THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN BEGIN
    PRINT, 'MERIS L1B RADIANCE: NO ENDIAN SIZE PROVIDED, RETRIEVING...'
    ENDIAN_SIZE = GET_ENDIAN_SIZE(/VERBOSE)
    ENDIF ELSE ENDIAN_SIZE = GET_ENDIAN_SIZE()
  ENDIF

;------------------------------------------------
;DEFINE HEADER VARIABLES

  MPH_SIZE = 1247
  SPH_SIZE = 9942
  FILE_MPH = BYTARR(MPH_SIZE)
  FILE_SPH = BYTARR(SPH_SIZE)
  
;-----------------------------------------------
; CONVERT IN_BAND NUMBER TO STRING

  IN_BAND_STR = STRTRIM(STRING(IN_BAND+1),2)
  
;-----------------------------------------------
; OPEN THE FILE AND EXTRACT HEADER

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS L1B RADIANCE: OPENING PRODUCT'
  OPENR,PRD_RAD,FILENAME,/GET_LUN
  READU,PRD_RAD,FILE_MPH
  READU,PRD_RAD,FILE_SPH

;-----------------------------------------------
; RETRIEVE: POSITION OF DSD, DSD,OFFSET,DS_SIZE,NUMBER OF RECORDS, RECORD SIZE

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS L1B RADIANCE: RETRIEVING DSD INFORMATION'
  RAD_DSD_POS =STRPOS(FILE_SPH,'DS_NAME="Radiance MDS('+IN_BAND_STR+')')
  RAD_DSD=STRMID(FILE_SPH, RAD_DSD_POS,280)
  RAD_OFFSET = STRMID(RAD_DSD, strpos(RAD_DSD, 'DS_OFFSET=+')+11,20)+0L
  RAD_SIZE = STRMID(RAD_DSD, strpos(RAD_DSD, 'DS_SIZE=+')+8,21)+0L
  RAD_DSR_NUMBER = STRMID(RAD_DSD, strpos(RAD_DSD, 'NUM_DSR=+')+8,11)+0L
  RAD_DSR_SIZE = STRMID(RAD_DSD, strpos(RAD_DSD, 'DSR_SIZE=+')+9,11)+0L

;---------------------------------------------
; DEFINE VARIABLE FOR HOLDING THE L1B DATA AND 
; THE TEMPORARY VARIABLE FOR CONTAINING THE DATA 
; WITHIN THE READING LOOP

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS L1B RADIANCE: DEFINING DATA ARRAYS FOR OUTPUT'
  L1B_RAD     = UINTARR((RAD_DSR_SIZE-13)/2,RAD_DSR_NUMBER)
  L1B_RAD_REC = UINTARR((RAD_DSR_SIZE-13)/2)
  NODATA      = BYTARR(13)
  
;---------------------------------------------
; POINT TO THE L1B RADIANCE DATA

  POINT_LUN, PRD_RAD, RAD_OFFSET
  
;---------------------------------------------
; LOOP OVER EACH RECORD AND EXTRACT DATA

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS L1B RADIANCE: STARTING LOOP FOR DATA EXTRACTION'
  FOR RREC=0,RAD_DSR_NUMBER-1 DO BEGIN
    READU,PRD_RAD,NODATA
    READU,PRD_RAD,L1B_RAD_REC
    L1B_RAD[*,RREC]=L1B_RAD_REC

;----------------------------------------
; SWAP ENDIAN IF NEEDED - MERIS DATA IS BIG ENDIAN
  
    IF ENDIAN_SIZE EQ 0 THEN BEGIN
      L1B_RAD[*,RREC] = SWAP_ENDIAN(L1B_RAD[*,RREC])
    ENDIF
    
  ENDFOR ; END OF LOOP OVER RADIANCE RECORDS

;---------------------------------------
; CLOSE THE FILE

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS L1B RADIANCE: CLOSING PRODUCTS AND RELEASING THE LUN'
  CLOSE, PRD_RAD
  FREE_LUN, PRD_RAD

;---------------------------------------
; RETRIEVE SCALING FACTOR FOR BAND

  IF KEYWORD_SET(VERBOSE) THEN BEGIN
    PRINT, 'MERIS L1B RADIANCE: RETRIEVING RADIANCE SCALING FACTORS'
    IN_BAND_SF=GET_MERIS_L1B_RADIANCE_SF(FILENAME,IN_BAND,ENDIAN_SIZE=ENDIAN_SIZE,/VERBOSE)
  ENDIF ELSE BEGIN
    IN_BAND_SF=GET_MERIS_L1B_RADIANCE_SF(FILENAME,IN_BAND,ENDIAN_SIZE=ENDIAN_SIZE)  
  ENDELSE

;---------------------------------------
; APPLY THE SCALING FACTOR AND RETURN DATA

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS L1B RADIANCE: APPLYING SCALING FACTOR AND RETURNING BAND RADIANCE'
  L1B_RAD=double(L1B_RAD)*double(IN_BAND_SF)
  RETURN,L1B_RAD
  
END
