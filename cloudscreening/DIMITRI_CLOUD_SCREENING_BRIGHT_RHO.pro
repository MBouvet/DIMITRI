;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      DIMITRI_CLOUD_SCREENING_BRIGHT_RHO       
;* 
;* PURPOSE:
;*      COMPUTES IS A PIXEL IS "BRIGHT" USING THE OPERATIONAL MERIS BRIGHT PIXEL 
;*      CLASSIFICATION LUT. THE LUT WAS EXTRACTED FROM THE CP1 AUX FILE USING IDL ROUTINES 
;*      DEVELOPED AT ACRI-ST.
;* 
;* CALLING SEQUENCE:
;*      RES = DIMITRI_CLOUD_SCREENING_BRIGHT_RHO(TOA_RHO,TOA_GEO,BRIGHT_RHO)    
;* 
;* INPUTS:
;*      TOA_RHO    - A FLOAT SCALAR OF THE TOA REFLECTANCE AT 443NM
;*      TOA_GEO    - A 3 OR 4 ELEMENT ARRAY CONTAINING THE SZA AND VZA VALUES AND EITHER
;*                   RAA OR SAA AND VAA 
;*      BRIGHT_RHO - THE BRIGHT_RHO STRUCTURE VARIABLE RETURNED WHEN RESTORING THE BRIGHT AUX FILE
;*
;* KEYWORDS:
;*      VERBOSE    - PROCESSING STATUS OUTPUTS
;*
;* OUTPUTS:
;*      BRIGHTF    - A BOLEEN FLAG INDICATING WHETEHR THE PIXEL IS "BRIGHT" OR NOT
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*      04 APR 2011 - C KENT   - DIMITRI-2 V1.0
;*
;* VALIDATION HISTORY:
;*      12 APR 2011 - C KENT   - NOMINAL COMPILATION AND OPERATION ON WINDOWS 32BIT 
;*                               IDL 7.1 AND LINUX 64BIT IDL 8.0. VALUES TESTED ON 
;*                               MERIS INDICATE IDENTICAL PERFORMANCE TO MERIS IPF.
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION DIMITRI_CLOUD_SCREENING_BRIGHT_RHO,TOA_REF,TOA_GEO,BRIGHT_RHO,VERBOSE=VERBOSE

;-------------------------------
; CHECK TOA_GEO AND COMPUTE RAA IF NEEDED

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'DIMITRI_CLOUD_SCREENING_BRIGHT_RHO: STARTING BRIGHT FLAG TEST'
  DIMS = SIZE(TOA_GEO,/DIMENSIONS)
  IF DIMS[0] EQ 4 THEN BEGIN
    GEO_VAL      = FLTARR(3)
    GEO_VAL[0:1] = TOA_GEO[0:1]
    GEO_VAL[2]   = ABS(TOA_GEO[2]-TOA_GEO[3])
    IF GEO_VAL[2] GT 180.0 THEN GEO_VAL[2] = 360.0 - GEO_VAL[2]
  ENDIF ELSE GEO_VAL = TOA_GEO

;-------------------------------
; COMPUTE LUT WEIGHTING FOR SZA,VZA AND RAA

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'DIMITRI_CLOUD_SCREENING_BRIGHT_RHO: COMPUTING GEOMETRY WEIGHTINGS'
  SZA_WEIGHT = INTERPOL(FINDGEN(N_ELEMENTS(BRIGHT_RHO.SZA)),BRIGHT_RHO.SZA,GEO_VAL[0])
  VZA_WEIGHT = INTERPOL(FINDGEN(N_ELEMENTS(BRIGHT_RHO.VZA)),BRIGHT_RHO.VZA,GEO_VAL[1])
  RAA_WEIGHT = INTERPOL(FINDGEN(N_ELEMENTS(BRIGHT_RHO.RAA)),BRIGHT_RHO.RAA,GEO_VAL[2])

;-------------------------------
; INTERPOLATE AT WEIGHTS IN BRIGHT LUT

  BRIGHT_THRESH = INTERPOLATE(BRIGHT_RHO.LUT,[RAA_WEIGHT],[VZA_WEIGHT],[SZA_WEIGHT]) 
  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'DIMITRI_CLOUD_SCREENING_BRIGHT_RHO: THRESHOLD = ',BRIGHT_THRESH

;-------------------------------
; CHECK 443NM REFLECTANCE AGAINST THRESHOLD 

  IF TOA_REF GT BRIGHT_THRESH THEN BRIGHTF = 1 ELSE BRIGHTF = 0
  RETURN,BRIGHTF

END