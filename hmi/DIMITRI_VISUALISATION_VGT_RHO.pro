;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      DIMITRI_VISUALISATION_VGT_RHO     
;* 
;* PURPOSE:
;*      THIS PROGRAM AUTOMATICALLY SERACHES AND RETRIEVES THE SIMULATED AND OPERATIONAL VGT RHO VALUES 
;*      OUTPUT BY DIMITRI GIVEN AN OUTPUT FOLDER.
;* 
;* CALLING SEQUENCE:
;*      RES = DIMITRI_VISUALISATION_VGT_RHO(RC_FOLDER,RC_REGION,DIMITRI_BAND)      
;*
;* INPUTS:
;*      RC_FOLDER     - A STRING OF THE FULL PATH FOR THE RECALIBRATION OUTPUT FOLDER
;*      RC_REGION     - A STRING OF THE DIMITRI VALIDATION SITE REQUESTED
;*      DIMITRI_BAND  - AN INTEGER OF THE DIMITRI BAND INDEX
;*
;* KEYWORDS:
;*      VERBOSE - PROCESSING STATUS OUTPUTS
;*
;* OUTPUTS:
;*      A STRUCTURE WITH THE FOLLOWING TAGS:
;*      ERROR      - THE ERROR STATUS CODE, 0 = NOMINAL, 1 OR -1 = ERROR
;*      VGT_DATA   - AN ARRAY CONTAINING THE VGT RHO AND TIME
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*      19 MAY 2011 - C KENT    - DIMITRI-2 V1.0
;*      30 SEP 2011 - C KENT    - UPDATED NUM NON REFS VARIABLE
;*
;* VALIDATION HISTORY:
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION DIMITRI_VISUALISATION_VGT_RHO,SL_FOLDER,SL_REGION,DIMITRI_BAND,VERBOSE=VERBOSE

;--------------------------
; CHECK BAND IS A VEGETATION BAND, IF NOT THEN RETURN ERROR

  IF KEYWORD_SET(VERBOSE) THEN PRINT,'DIMITRI_VISU_VGT: STARTING VGT DATA RETRIEVAL'   
  RAISE_NO_VGT = 1
  VGT_SENSOR = 'VEGETATION'
  BAND_ID = GET_SENSOR_BAND_INDEX(VGT_SENSOR,DIMITRI_BAND)
  IF BAND_ID[0] LT 0 THEN GOTO,NO_VGT_DATA ELSE RAISE_NO_VGT = 0

;--------------------------
; DEFINE FILENAME STRINGS
  
  VGT_STR    = STRING(SL_REGION+'_'+VGT_SENSOR+'_*.DAT')

;--------------------------
; SEARCH OFOLDER FOR DATA FILES
  
  VGT_FILES = FILE_SEARCH(SL_FOLDER,VGT_STR)

  IF VGT_FILES[0] EQ '' THEN BEGIN
    RAISE_NO_VGT = 1
    GOTO,NO_VGT_DATA 
  ENDIF

;--------------------------
; GET UNIQ VGT PROCESSING CONFIGS
  
  VGT_CONFIG = MAKE_ARRAY(N_ELEMENTS(VGT_FILES),/STRING)
  VGT_CONFIG = [string(VGT_SENSOR+'_Calibration_1')]
;  FOR IVGT = 0,N_ELEMENTS(VGT_FILES)-1 DO BEGIN
;    
;    TEMP = STRSPLIT(VGT_FILES[IVGT],'_',/EXTRACT)
;    LOC = WHERE(TEMP EQ VGT_SENSOR)
;    N = N_ELEMENTS(TEMP)
;    VGT_CONFIG[IVGT] = VGT_SENSOR+'_'+STRJOIN(TEMP[LOC+1:N-2],'_')
;    stop
;  ENDFOR
   
  
;  VGT_CONFIG = VGT_CONFIG[UNIQ(VGT_CONFIG,SORT(VGT_CONFIG))]
  VGT_DATA = MAKE_ARRAY(7200,N_ELEMENTS(VGT_CONFIG),2,2,/FLOAT)
  num_non_ref = 5+12

  FOR IVGT=0,N_ELEMENTS(VGT_CONFIG)-1 DO BEGIN
  
    TEMP_STR1 = STRING(SL_FOLDER+SL_REGION+'_'+VGT_CONFIG[IVGT]+'.DAT')
    IF FILE_TEST(TEMP_STR1) THEN BEGIN
      RESTORE,TEMP_STR1
      N = N_ELEMENTS(GD_VGT_DATA[0,*])
      VGT_DATA[0:N-1,Ivgt,0,0] = GD_VGT_DATA[0,*]
      VGT_DATA[0:N-1,Ivgt,1,0] = GD_VGT_DATA[num_non_ref+BAND_ID,*]
    ENDIF
    TEMP_STR2 = STRING(SL_FOLDER+SL_REGION+'_'+VGT_CONFIG[IVGT]+'_SIM.DAT')
    IF FILE_TEST(TEMP_STR2) THEN BEGIN
      RESTORE,TEMP_STR2
      N = N_ELEMENTS(SIMU_VGT[*,0])
      VGT_DATA[0:N-1,Ivgt,0,1] = SIMU_VGT[*,0]
      VGT_DATA[0:N-1,Ivgt,1,1] = SIMU_VGT[*,num_non_ref+BAND_ID]
    ENDIF
  ENDFOR

  NO_VGT_DATA:
  IF RAISE_NO_VGT THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, 'DIMITRI_VISU_VGT: NO DATA FOUND, RETURNING'
    RETURN,{ERROR:1,VGT_DATA:MAKE_ARRAY(1,1,2,2,/FLOAT),VGT_CONFIGS:['ERROR']}
  ENDIF 

;-------------------------------- 
; RETURN THE VGT RHO ARRAY

  IF KEYWORD_SET(VERBOSE) THEN PRINT,'DIMITRI_VISU_VGT: RETURNING DATA STRUCTURE' 
  VISU_VGT = {                                             $
              ERROR:0                                      ,$
              VGT_CONFIGS: VGT_CONFIG                      ,$
              VGT_DATA:VGT_DATA                            $
              }

  RETURN,VISU_VGT

END
