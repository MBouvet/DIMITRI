;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      DIMITRI_VISUALISATION_RECALIBRATION     
;* 
;* PURPOSE:
;*      THIS PROGRAM AUTOMATICALLY SEARCHES AND RETRIEVES THE RECALIBRATED REFLECTANCE 
;*      OUTPUT BY DIMITRI GIVEN AN OUTPUT FOLDER, REFERENCE SENSOR CONFIGURATION.
;* 
;* CALLING SEQUENCE:
;*      RES = DIMITRI_VISUALISATION_RECALIBRATION(RC_FOLDER,VR_REGION,DIMITRI_BAND,$
;*                            REF_SENSOR,REF_PROC_VER,NB_XELEMENTS,SENS_CONFIGS)      
;*
;* INPUTS:
;*      RC_FOLDER     - A STRING OF THE FULL PATH FOR THE DOUBLET_EXTRACTION OUTPUT FOLDER
;*      VR_REGION     - A STRING OF THE DIMITRI VALIDATION SITE REQUESTED
;*      DIMITRI_BAND  - THE REQUIRED DIMITRI BAND INDEX (STARTS FROM 0)
;*      REF_SENSOR    - A STRING OF THE REFERENCE SENSOR UTILISED FOR PROCESSING
;*      REF_PROC_VER  - A STRING OF THE REFERENCE SENSOR'S PROCESSING VERSION 
;*      NB_XELEMENTS  - THE TOTAL NUMBER OF X ELEMENTS ALLOWED TO BE RETURNED
;*      SENS_CONFIGS  - A STRING ARRAY OF THE SENSOR CONFIGURATIONS RETURNED BY
;*                      DIMITRI_VISUALISATION_REFLECTANCE.pro
;*
;* KEYWORDS:
;*      VERBOSE - PROCESSING STATUS OUTPUTS
;*
;* OUTPUTS:
;*      A STRUCTURE WITH THE FOLLOWING TAGS:
;*      ERROR             - THE ERROR STATUS CODE, 0 = NOMINAL, 1 OR -1 = ERROR
;*      DATA              - AN ARRAY CONTAINING ALL RECALIBRATED DATA
;*      SENS_CONFIG_ABLE  - AN INTEGER ARRAY DESCRIBING IF DATA IS AVAILABLE FOR A
;*                          CERTAIN SENSOR CONFIGURATION
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*      08 FEB 2011 - C KENT    - DIMITRI-2 V1.0
;*      04 JUL 2011 - C KENT    - ADDED AUX INFO TO INTERNAL SAV
;*
;* VALIDATION HISTORY:
;*      08 FEB 2011 - C KENT    - WINDOWS 32-BIT MACHINE IDL 7.1/IDL 8.0: NOMINAL 
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION DIMITRI_VISUALISATION_RECALIBRATION,RC_FOLDER,VR_REGION,DIMITRI_BAND,REF_SENSOR,REF_PROC_VER,$
                                             SENS_CONFIGS,VERBOSE=VERBOSE

  NB_XELEMENTS = 100000L
  NUM_NON_REFS = 5+12

;--------------------------------
; FIND ALL CORRESPONDING DOUBLET 
; EXTRACTION FILES 

  CAL_STR = 'RECAL_'+VR_REGION+'_*_REF_'+REF_SENSOR+'_'+REF_PROC_VER+'.dat'

  IF KEYWORD_SET(VERBOSE) THEN PRINT,'DIMITRI_VISU_RCAL: SEARCHING FOR RECAL DATA'
  CAL_FILES = FILE_SEARCH(RC_FOLDER,CAL_STR)

;-----------------------------------------
; RETRIEVE THE SITE TYPE

  SITE_TYPE = GET_SITE_TYPE(VR_REGION)

;--------------------------------  
; CREATE AN ARRAY TO HOLD ALL TIME 
; AND REFLECTANCE DATA FOR EACH 
; SENSOR CONFIGURATION

  NUM_SENS_CONFIGS  = N_ELEMENTS(SENS_CONFIGS)
  RCAL_DATA         = MAKE_ARRAY(NB_XELEMENTS,NUM_SENS_CONFIGS,2,/DOUBLE)
  SENS_CONFIG_ABLE  = MAKE_ARRAY(N_ELEMENTS(SENS_CONFIGS),/INTEGER,VALUE=0)

  IF STRCMP(CAL_FILES[0],'') EQ 1 THEN BEGIN
    PRINT, 'DIMITRI_VISU_RCAL: NO RECAL DATA FOUND, RETURNING'
    RETURN,{ERROR:1,DATA:RCAL_DATA,SENS_CONFIG_ABLE:SENS_CONFIG_ABLE}
  ENDIF

;-------------------------------- 
; RESTORE CAL FILES AND STORE 
; THE DATA  

  IF KEYWORD_SET(VERBOSE) THEN PRINT,'DIMITRI_VISU_RCAL: STARTING LOOP ON ALL CAL-SENSOR FILES'
  FOR I=0,N_ELEMENTS(CAL_FILES)-1 DO BEGIN

;-------------------------------- 
; GET SENSOR CONFIGURATION FROM FILENAME

    POS   = STRPOS(CAL_FILES[I],VR_REGION,/REVERSE_SEARCH)+STRLEN(VR_REGION)+1
    POS1  = STRPOS(CAL_FILES[I],'REF',/REVERSE_SEARCH)-1
    TMP   = STRMID(CAL_FILES[I],POS,POS1-POS)
    RESTORE,CAL_FILES[I] 

    POS = WHERE(STRCMP(SENS_CONFIGS,TMP) EQ 1)
    IF POS[0] EQ -1 OR N_ELEMENTS(POS) GT 1 THEN GOTO,NEXT_FILE
    SENS_CONFIG_ABLE[POS] = 1

;--------------------------------
; GET SENSOR BAND INDEX

    SENS_NAME = STRSPLIT(TMP,'_',/EXTRACT)
    SENS_NAME = SENS_NAME[0]

;-----------------------------------------
; MODISA SURFACE DEPENDANCE EXCEPTION

  IF SENS_NAME EQ 'MODISA' THEN BEGIN
    IF STRUPCASE(SITE_TYPE) EQ 'OCEAN' THEN TEMP_SENSOR = SENS_NAME+'_O' ELSE TEMP_SENSOR = SENS_NAME+'_L'
  ENDIF ELSE TEMP_SENSOR = SENS_NAME

    IDX = GET_SENSOR_BAND_INDEX(TEMP_SENSOR,DIMITRI_BAND)
    IF IDX lt 0 THEN GOTO,NEXT_FILE

;--------------------------------
; STORE TIME AND REFLECTANCE DATA

    TEMP_ELEMENTS = N_ELEMENTS(CAL_DATA[0,*])
    TMP_DATE = DOUBLE(CAL_DATA[0,*])
    TMP_REFL = DOUBLE(CAL_DATA[NUM_NON_REFS+IDX,*])
    SORT_IDX = SORT(TMP_DATE)

    RCAL_DATA[0:TEMP_ELEMENTS-1,POS,0] = TMP_DATE[SORT_IDX]
    RCAL_DATA[0:TEMP_ELEMENTS-1,POS,1] = TMP_REFL[SORT_IDX]
 
    NEXT_FILE:
  ENDFOR

;--------------------------------      
; RETURN ALL DATA IN A STRUCTURE

  IF KEYWORD_SET(VERBOSE) THEN PRINT,'DIMITRI_VISU_RCAL: RETURNING RECAL DATA STRUCTURE'  
  VISU_RCAL = {                                             $
              ERROR:0                                       ,$
              DATA:RCAL_DATA                                ,$
              SENS_CONFIG_ABLE:SENS_CONFIG_ABLE             $
              }

  RETURN,VISU_RCAL

END