;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      RSR_LEGEND_UPDATE       
;* 
;* PURPOSE:
;*      THIS FUNCTION IS CALLED BY THE ROUTINE "PLOT_DIMITRI_SENSOR_RSR" AND UPDATE THE 
;*      LEGEND INFORMATION BASED ON AN ARRAY DETAILING WHICH VALUES ARE CURRENTLY PLOTTED. 
;*
;* CALLING SEQUENCE:
;*      RSR_INFO = RSR_LEGEND_UPDATE(RSR_INFO)     
;* 
;* INPUTS:
;*      RSR_INFO  - THE RSR_INFO STRUCTURE AS DEFINED WITHIN "PLOT_DIMITRI_SENSOR_RSR"
;*
;* KEYWORDS:
;*      VERBOSE   - PROCESSING STATUS OUTPUTS
;*
;* OUTPUTS:
;*      NONE
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*      30 MAR 2011 - C KENT   - DIMITRI-2 V1.0
;*
;* VALIDATION HISTORY:
;*      14 APR 2011 - C KENT   - WINDOWS 32-BIT IDL 7.1 AND LINUX 64-BIT IDL 8.0 NOMINAL
;*                               COMPILATION AND OPERATION 
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION RSR_LEGEND_UPDATE,RSR_INFO,VERBOSE=VERBOSE

;--------------------------
; DEFINE INITIAL COLOUR ARRAY 
; AND FIND WHICH DATA IS ON

  IF KEYWORD_SET(VERBOSE) THEN PRINT,'RSR_LEGEND_UPDATE: STARING UPDATE OF PLOT LEGEND'
  RES = WHERE(RSR_INFO.DATA_ON EQ 1)
  IF RES[0] EQ -1 THEN GOTO, NO_LEGEND_UPDATE
  TEMP_COLOURS = BYTARR(3,N_ELEMENTS(RES))

;--------------------------
; STARTING LOOP OVER EACH DATA_ON

  IF KEYWORD_SET(VERBOSE) THEN PRINT,'RSR_LEGEND_UPDATE: STARING LOOP OVER EACH DATA ON VALUE'
  FOR I=0,N_ELEMENTS(RES)-1 DO BEGIN

    TEMP = RSR_INFO.DATA_ON_LIST[RES[I]]
    ACT = STRMID(TEMP,0,3)

    IF ACT EQ RSR_INFO.TEXT_RSR OR ACT EQ RSR_INFO.TEXT_SEN THEN BEGIN

      TEMP = STRSPLIT(TEMP,'_',/EXTRACT)
      SENS = TEMP[N_ELEMENTS(TEMP)-1]
      SENS_ID = WHERE(RSR_INFO.SENSOR_ID EQ SENS)
      TEMP_COLOURS[*,I] = RSR_INFO.SENSOR_COLOURS[*,SENS_ID]
    
    ENDIF ELSE BEGIN
      
      TEMP_SITE = STRMID(TEMP,4,STRLEN(TEMP)-4)
      SITE_ID = WHERE(RSR_INFO.SPECTRA_NAMES EQ TEMP_SITE)
      TEMP_COLOURS[*,I] = RSR_INFO.SITE_COLOURS[*,SITE_ID]
    
    ENDELSE
  ENDFOR

;--------------------------
; UPDATING THE LEGEND OBJECT

  IF KEYWORD_SET(VERBOSE) THEN PRINT,'RSR_LEGEND_UPDATE: UPDATING LEGEND OBJECT'
  RSR_INFO.RSR_LEGEND->SETPROPERTY, ITEM_NAME  = RSR_INFO.LEGEND_NAMES[RES]           ,$
                                    ITEM_COLOR = TEMP_COLOURS                         ,$
                                    THICK      = MAKE_ARRAY(N_ELEMENTS(RES),VALUE=2)

  NO_LEGEND_UPDATE:
  IF KEYWORD_SET(VERBOSE) THEN PRINT,'RSR_LEGEND_UPDATE: RETURNING NEW RSR_INFO'
  RETURN,RSR_INFO

END