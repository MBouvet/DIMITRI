;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      GREAT_CIRCLE_DISTANCE       
;* 
;* PURPOSE:
;*      RETURNS THE HAVERSINE GREAT CIRCLE DISTANCE OVER THE EARTH BETWEEN 2 POINTS
;* 
;* CALLING SEQUENCE:
;*      RES = GREAT_CIRCLE_DISTANCE(LAT1,LON1,LAT2,LON2)      
;* 
;* INPUTS:
;*      LAT1 = A FLOAT OF THE LATITUDE FOR POINT 1
;*      LON1 = A FLOAT OF THE LONGITUDE FOR POINT 1
;*      LAT2 = A FLOAT OF THE LATITUDE FOR POINT 2
;*      LON2 = A FLOAT OF THE LONGITUDE FOR POINT 2
;* KEYWORDS:
;*      DEGREES  - SET TO INDICATE THAT THE VALUES PROVIDED ARE IN DEGREES AND NOT RADIANS
;*      VERBOSE  - PROCESSING STATUS OUTPUTS
;*
;* OUTPUTS:
;*      DISTANCE  - A FLOAT OF THE DISTANCE (KM) BETWEEN 2 POINTS
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*      17 JAN 2011 - C KENT   - DIMITRI-2 V1.0
;*
;* VALIDATION HISTORY:
;*      14 APR 2011 - C KENT   - WINDOWS 32-BIT IDL 7.1 AND LINUX 64-BIT IDL 8.0 NOMINAL
;*                               COMPILATION AND OPERATION 
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION GREAT_CIRCLE_DISTANCE,LAT1,LON1,LAT2,LON2,DEGREES=DEGREES,VERBOSE=VERBOSE

  IF KEYWORD_SET(DEGREES) THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT,'GREAT_CIRCLE_DISTANCE: CONVERTING VALUES TO RADIANS'
    LAT1 = LAT1*!DTOR 
    LON1 = LON1*!DTOR
    LAT2 = LAT2*!DTOR
    LON2 = LON2*!DTOR
  ENDIF

  IF KEYWORD_SET(VERBOSE) THEN PRINT,'GREAT_CIRCLE_DISTANCE: COMPUTING DISTANCE BETWEEN POINTS'
  R_EARTH   = 6371.0
  DLAT      = FLOAT(LAT2)-FLOAT(LAT1)
  DLON      = FLOAT(LON2)-FLOAT(LON1)
  ALPHA     = (SIN(DLAT/2))^2+COS(LAT1)*COS(LAT2)*(SIN(DLON/2))^2
  CONST     = 2*ATAN(SQRT(ALPHA),SQRT(1-ALPHA))
  DISTANCE  = R_EARTH*CONST  

  IF KEYWORD_SET(VERBOSE) THEN PRINT,'GREAT_CIRCLE_DISTANCE: RETURNING COMPUTED DISTANCE'
  RETURN,DISTANCE

END    