;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      GET_MERIS_TIMESERIES_PLOTS       
;* 
;* PURPOSE:
;*      GENERATES PLOTS FROM THE SUPPLIED TIME SERIES OF DIMITRI MERIS DATA.
;* 
;* CALLING SEQUENCE:
;*      RES = GET_MERIS_TIMESERIES_PLOTS(OUTPUT_SAV)      
;* 
;* INPUTS:
;*      OUTPUT_SAV  -  STRING OF THE SENSOR/PROCESSING OUTPUT SAV      
;*
;* KEYWORDS:
;*      COLOUR_TABLE      - USER DEFINED IDL COLOUR TABLE INDEX (DEFAULT IS 39)
;*      PLOT_XSIZE        - WIDTH OF GENERATED PLOTS (DEFAULT IS 700PX)
;*      PLOT_YSIZE        - HEIGHT OF GENERATED PLOTS (DEFAULT IS 400PX)
;*      NO_ZBUFF          - IF SET THEN PLOTS ARE GENERATED IN WINDOWS AND NOT 
;*                          WIHTIN THE Z-BUFFER.
;*      VERBOSE           - PROCESSING STATUS OUTPUTS      
;*
;* OUTPUTS:
;*      PLOTS OF TOA REFLECTANCE, REFLECTANCE EVOLUTION, SOLAR ZENITH ANGLE AND SENSOR 
;*      ZENITH ANGLE AUTOMATICALLY SAVED.  
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*      01 DEC 2010 - C KENT   - DIMITRI-2 V1.0
;*      02 DEC 2010 - C KENT   - UPDATED HEADER INFORMATION AND OUTPUT_SAV TEST
;*      03 DEC 2010 - C KENT   - UPDATED TO ACCOUNT FOR NO DATA VALUES WITHIN OUTPUT_SAV
;*      05 JAN 2011 - C KENT   - MINOR SPELLING CHANGES
;*      10 JAN 2011 - C KENT   - CHANGED INPUT VARIABLE TO SENSOR_L1B_REF
;*      12 JAN 2011 - C KENT   - UPDATED TO REFLECT CHANGES IN SENSORS_L1B_REF (INCLUDES VAA AND SAA)
;*      22 MAR 2011 - C KENT   - ADDED CONFIGURAITON FILE DEPENDENCE
;*      04 JUL 2011 - C KENT   - UPDATED TO INCLUDE AUX DATA INFORMATION IN SAV
;*
;* VALIDATION HISTORY:
;*      01 DEC 2010 - C KENT   - WINDOWS 32-BIT MACHINE: COMPILATION SUCCESSFUL,
;*                               ZBUFFER AND NOMINAL PLOTS PRODUCED OK.
;*      05 JAN 2010 - C KENT   - LINUX 64-BIT MACHINE IDL 8.0: COMPILATION SUCCESSFUL,
;*                               NO DIFFERENCES OBSERVED AGAINST WINDOWS 32-BIT MACHINE
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION GET_MERIS_TIMESERIES_PLOTS,OUTPUT_SAV,NO_ZBUFF=NO_ZBUFF,COLOUR_TABLE=COLOUR_TABLE,PLOT_XSIZE=PLOT_XSIZE,PLOT_YSIZE=PLOT_YSIZE,VERBOSE=VERBOSE

;-----------------------------------------------
; RESTORE THE L1B REFLECTANCE

  TEMP = FILE_INFO(OUTPUT_SAV)
  IF TEMP.EXISTS EQ 1 THEN BEGIN
    RESTORE,OUTPUT_SAV
  ENDIF ELSE BEGIN
    PRINT, 'MERIS_TIMESERIES_PLOTS: ERROR, OUTPUT_SAV DOES NOT EXIST'
    RETURN,-1
  ENDELSE

;-----------------------------------------------
; FIND ONLY THE GOOD DATA

  NUM_NON_REF = 5+12
  RES = WHERE(SENSOR_L1B_REF[NUM_NON_REF,*] GT 0.0 and SENSOR_L1B_REF[NUM_NON_REF,*] lt 1.0)
  IF RES[0] EQ -1 THEN RETURN,-1
  MERIS_L1B_REF_GD = SENSOR_L1B_REF[*,RES]

;------------------------------------------------
; GET THE SIZE DIMENSIONS OF INPUT L1B TIMESERIES (NOTE, EXPECTING DIMITRI-MERIS VARIABLE STRUCTURE)

  NB_COLS = 35
  RES = SIZE(MERIS_L1B_REF_GD)
  IF RES[1] NE NB_COLS THEN BEGIN
    PRINT, 'MERIS_TIMESERIES_PLOTS: ERROR, INPUT L1B VARIABLE STRUCTURE MUST BE IN DIMITRI FORMAT'
    RETURN, -1
  ENDIF 
 
;------------------------------------------------
; SET PARAMETERS AND KEYWORD VALUES

  NB_BANDS = 15
  CFIG_DATA = GET_DIMITRI_CONFIGURATION()
  IF NOT KEYWORD_SET(COLOUR_TABLE) THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS_TIMESERIES_PLOTS: NO COLOR_TABLE SET, USING DEFAULT OF 39'
    COLOUR_TABLE = CFIG_DATA.(1)[2]
  ENDIF
  IF NOT KEYWORD_SET(PLOT_XSIZE) THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS_TIMESERIES_PLOTS: PLOT_XSIZE NOT SET, USING DEFAULT OF 700'
    PLOT_XSIZE = CFIG_DATA.(1)[0]
  ENDIF
  IF NOT KEYWORD_SET(PLOT_YSIZE) THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS_TIMESERIES_PLOTS: PLOT_YSIZE NOT SET, USING DEFAULT OF 400'
    PLOT_YSIZE = CFIG_DATA.(1)[1]
  ENDIF 
  
  YMIN = 0.0
  YMAX = 1.0

;------------------------------------------------
; DEFINE OUTPUT FILENAMES BASED ON OUTPUT_SAV

  OUTPUT_BASE = STRMID(OUTPUT_SAV,0,STRLEN(OUTPUT_SAV)-11)
  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS_TIMESERIES_PLOTS: OUTPUT_BASE = ',OUTPUT_BASE
 
;------------------------------------------------
; SETUP WINDOW PROPERTIES

  MACHINE_WINDOW = !D.NAME
  IF NOT KEYWORD_SET(NO_ZBUFF) THEN BEGIN
  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS_TIMESERIES_PLOTS: GENERATING PLOTS WITHIN Z-BUFFER'
  SET_PLOT, 'Z'
  DEVICE, SET_RESOLUTION=[PLOT_XSIZE,PLOT_YSIZE],set_pixel_depth=24
  ERASE  
  ENDIF ELSE WINDOW,XSIZE = PLOT_XSIZE,YSIZE=PLOT_YSIZE
  DEVICE, DECOMPOSED = 0
  LOADCT, COLOUR_TABLE

;------------------------------------------------
; PLOT REFLECTANCE DATA AGAINST DOY

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS_TIMESERIES_PLOTS: PLOTTING TOA REFLECTANCE AGAINST DOY'
  PLOT,MERIS_L1B_REF_GD[0,*],MERIS_L1B_REF_GD[NUM_NON_REF,*],/NODATA,$
  COLOR = 0, BACKGROUND = 255,$
  YTITLE = 'TOA REFLECTANCE (DL)',$
  XTITLE = 'DECIMAL YEAR',$
  YRANGE = [YMIN,YMAX],$
  XTICKFORMAT='((F8.3))'

  FOR PLOT_BAND=0,NB_BANDS-1 DO BEGIN
    TT = WHERE(MERIS_L1B_REF_GD[NUM_NON_REF+PLOT_BAND,*] GT 0.0 AND MERIS_L1B_REF_GD[NUM_NON_REF+PLOT_BAND,*] LT 1.0)
    IF TT[0] GT -1 THEN OPLOT, MERIS_L1B_REF_GD[0,TT],MERIS_L1B_REF_GD[NUM_NON_REF+PLOT_BAND,TT],$
    COLOR = 250.*PLOT_BAND/15.
  ENDFOR

  TEMP = TVRD(TRUE=1)
  OUTPUT_IMAGE = STRING(OUTPUT_BASE+'TOA_REFLECTANCE.jpg')
  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS_TIMESERIES_PLOTS: REFLECTANCE OUTPUT AT ',OUTPUT_IMAGE
  WRITE_JPEG,OUTPUT_IMAGE,TEMP,TRUE=1,QUALITY=100
  ERASE

;----------------------------------------------
;PLOT REFLECTANCE EVOLUTION AGAINST DOY

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS_TIMESERIES_PLOTS: PLOTTING TOA REFLECTANCE EVOLUTION AGAINST DOY'
  PLOT,MERIS_L1B_REF_GD[0,*],100.0*(MERIS_L1B_REF_GD[NUM_NON_REF,*]-MERIS_L1B_REF_GD[NUM_NON_REF,0])/MERIS_L1B_REF_GD[NUM_NON_REF,0],/NODATA,$
  COLOR = 0, BACKGROUND = 255,$
  YTITLE = 'TOA REFLECTANCE EVOLUTION (%)',$
  XTITLE = 'DECIMAL YEAR',$
  XTICKFORMAT='((F8.3))'
 
  FOR PLOT_BAND=0,NB_BANDS-1 DO BEGIN
    TT = WHERE(MERIS_L1B_REF_GD[NUM_NON_REF+PLOT_BAND,*] GT 0.0 AND MERIS_L1B_REF_GD[NUM_NON_REF+PLOT_BAND,*] LT 1.0)
    IF TT[0] GT -1 THEN OPLOT, MERIS_L1B_REF_GD[0,TT],100.0*(MERIS_L1B_REF_GD[NUM_NON_REF+PLOT_BAND,TT]-MERIS_L1B_REF_GD[NUM_NON_REF+PLOT_BAND,0])/MERIS_L1B_REF_GD[NUM_NON_REF+PLOT_BAND,0],$
    COLOR = 250.*PLOT_BAND/15.
  ENDFOR

  TEMP = TVRD(/TRUE)
  OUTPUT_IMAGE = string(OUTPUT_BASE+'TOA_EVOLUTION.jpg')
  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS_TIMESERIES_PLOTS: EVOLUTION OUTPUT AT ',OUTPUT_IMAGE
  WRITE_JPEG,OUTPUT_IMAGE,TEMP,TRUE=1,QUALITY=100
  ERASE

;-----------------------------------------------
; PLOT SENSOR ZENITH AGAINST DOY

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS_TIMESERIES_PLOTS: PLOTTING SENSOR ZENITH AGAINST DOY' 
  PLOT,MERIS_L1B_REF_GD[0,*],MERIS_L1B_REF_GD[1,*],/NODATA,$
  COLOR = 0, BACKGROUND = 255,$
  YTITLE = 'SENSOR ZENITH OVER ROI (DEGREES)',$
  XTITLE = 'DECIMAL YEAR',$
  XTICKFORMAT='((F8.3))'
  
  OPLOT,MERIS_L1B_REF_GD[0,*],MERIS_L1B_REF_GD[1,*],$
  PSYM = 2,$
  COLOR = 250

  TEMP = TVRD(/TRUE)
  OUTPUT_IMAGE = STRING(OUTPUT_BASE+'SENSOR_ZENITH_ANGLE.jpg')
  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS_TIMESERIES_PLOTS: SENSOR ZENITH OUTPUT AT ',OUTPUT_IMAGE
  WRITE_JPEG,OUTPUT_IMAGE,TEMP,TRUE=1,QUALITY=100
  ERASE

;-----------------------------------------------
; PLOT SOLAR ZENITH AGAINST DOY

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS_TIMESERIES_PLOTS: PLOTTING SOLAR ZENITH AGAINST DOY' 
  PLOT,MERIS_L1B_REF_GD[0,*],MERIS_L1B_REF_GD[3,*],/NODATA,$
  COLOR = 0, BACKGROUND = 255,$
  YTITLE = 'SOLAR ZENITH OVER ROI (DEGREES)',$
  XTITLE = 'DECIMAL YEAR',$
  XTICKFORMAT='((F8.3))'
  
  OPLOT,MERIS_L1B_REF_GD[0,*],MERIS_L1B_REF_GD[3,*],$
  PSYM = 2,$
  COLOR = 70

  TEMP = TVRD(/TRUE)
  OUTPUT_IMAGE = STRING(OUTPUT_BASE+'SOLAR_ZENITH_ANGLE.jpg')
  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS_TIMESERIES_PLOTS: SOLAR ZENITH OUTPUT AT ',OUTPUT_IMAGE
  WRITE_JPEG,OUTPUT_IMAGE,TEMP,TRUE=1,QUALITY=100
  ERASE

;-----------------------------------------------
; RETURN DEVISE WINDOW TO NOMINAL SETTING
 
  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS_TIMESERIES_PLOTS: RESETTING DEVICE WINDOW PROPERTIES'
  IF KEYWORD_SET(NO_ZBUFF) THEN WDELETE
  SET_PLOT, MACHINE_WINDOW
  RETURN,1

END