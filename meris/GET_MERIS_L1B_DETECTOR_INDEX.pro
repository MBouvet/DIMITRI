;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      GET_MERIS_L1B_DETECTOR_INDEX       
;* 
;* PURPOSE:
;*      RETURNS THE DETECTOR INDEX OF A MERIS IMAGE
;* 
;* CALLING SEQUENCE:
;*      RES = GET_MERIS_L1B_DETECTOR_INDEX(FILENAME)      
;* 
;* INPUTS:
;*      FILENAME - A SCALAR CONTAINING THE FILENAME OF THE PRODUCT FOR GEOLOCATION EXTRACTION      
;*
;* KEYWORDS:
;*      ENDIAN_SIZE - MACHINE ENDIAN SIZE (0: LITTLE, 1: BIG)
;*      VERBOSE     - PROCESSING STATUS OUTPUTS
;*
;* OUTPUTS:
;*      DET_IDX     - AN INTEGER ARRAY OF PRODUCT DIMENSIONS CONTAINING PIXEL DETECTOR INDEX 
;*
;* COMMON BLOCKS:
;*      NONE     
;*
;* MODIFICATION HISTORY:
;*      07 JUL 2005 - M BOUVET  - PROTOTYPE DIMITRI VERSION
;*      17 NOV 2010 - C KENT    - DIMITRI-2 V1.0
;*      20 NOV 2010 - C KENT    - UPDATED TO ALLOW SINGULAR USAGE (REMOVED COMMON BLOCKS)
;*      22 NOV 2010 - C KENT    - ADDED VERBOSE KEYWORD OPTION
;*      01 DEC 2010 - C KENT    - ADDED INITIAL INPUT TEST
;*      02 DEC 2010 - C KENT    - UPDATED HEADER INFORMATION
;*
;* VALIDATION HISTORY:
;*      01 DEC 2010 - C KENT    - WINDOWS 32-BIT MACHINE IDL 7.1: COMPILATION SUCCESSFUL,
;*                                DETECTOR DATA NOMINAL FOR A MERIS L1B PRODUCT 
;*                                (VALIDATED AGAINST BEAM)
;*      05 JAN 2010 - C KENT    - LINUX 64-BIT MACHINE IDL 8.0: COMPILATION SUCCESSFUL,
;*                                NO DIFFERENCES OBSERVED AGAINST WINDOWS 32-BIT MACHINE
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION GET_MERIS_L1B_DETECTOR_INDEX,FILENAME,ENDIAN_SIZE=ENDIAN_SIZE,VERBOSE=VERBOSE

;------------------------------------------------
; CHECK FILENAME IS A NOMINAL INPUT

  IF FILENAME EQ '' THEN BEGIN
    PRINT, 'MERIS L1B DETECTOR: ERROR, INPUT FILENAME INCORRECT'
    RETURN,-1
  ENDIF
  
;------------------------------------------------
; IF ENDIAN SIZE NOT PROVIDED THEN GET VALUE

  IF N_ELEMENTS(ENDIAN_SIZE) EQ 0 THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN BEGIN
    PRINT, 'MERIS L1B DETECTOR: NO ENDIAN SIZE PROVIDED, RETRIEVING...'
    ENDIAN_SIZE = GET_ENDIAN_SIZE(/VERBOSE)
    ENDIF ELSE ENDIAN_SIZE = GET_ENDIAN_SIZE()
  ENDIF
  
;------------------------------------------------
; DEFINE HEADER VARIABLES

  MPH_SIZE = 1247
  SPH_SIZE = 9942
  FILE_MPH = BYTARR(MPH_SIZE)
  FILE_SPH = BYTARR(SPH_SIZE)

;-----------------------------------------------
; OPEN THE FILE AND EXTRACT HEADER

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS L1B DETECTOR: OPENING PRODUCT'
  OPENR,PRD_DET,FILENAME,/GET_LUN
  READU,PRD_DET,FILE_MPH
  READU,PRD_DET,FILE_SPH

;-----------------------------------------------
; RETRIEVE: POSITION OF DSD, DSD,OFFSET,DS_SIZE,NUMBER OF RECORDS, RECORD SIZE

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS L1B DETECTOR: RETRIEVING DSD INFORMATION'
  FLG_POS =STRPOS(FILE_SPH,'DS_NAME="Flags MDS(16)               "')
  FLG_DSD=STRMID(FILE_SPH, FLG_POS,280)
  FLG_OFFSET = STRMID(FLG_DSD, strpos(FLG_DSD, 'DS_OFFSET=+')+10,21)+0L
  FLG_SIZE = STRMID(FLG_DSD, strpos(FLG_DSD, 'DS_SIZE=+')+8,21)+0L
  FLG_DSR_NUMBER = STRMID(FLG_DSD, strpos(FLG_DSD, 'NUM_DSR=+')+8,11)+0L
  FLG_DSR_SIZE = STRMID(FLG_DSD, strpos(FLG_DSD, 'DSR_SIZE=+')+9,11)+0L

;-----------------------------------------
; DEFINE ARRAYS TO HOLD EXTRACTED DATA

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS L1B DETECTOR: DEFINING DATA ARRAYS FOR OUTPUT'
  DET_IDX = INTARR((FLG_DSR_SIZE-13)/3,FLG_DSR_NUMBER)
  DET_REC = INTARR((FLG_DSR_SIZE-13)/3)
  NODATA  = BYTARR(13+(FLG_DSR_SIZE-13)/3)
  
;-----------------------------------------
; POINT TO DATA LOCATION WITHIN PRODUCT

  POINT_LUN,PRD_DET,FLG_OFFSET

;-----------------------------------------
; LOOP OVER DATA AND EXTRACT 

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS L1B DETECTOR: STARTING LOOP FOR DATA EXTRACTION'
  FOR DREC=0,FLG_DSR_NUMBER-1 DO BEGIN
    
    READU,PRD_DET,NODATA
    READU,PRD_DET,DET_REC
    DET_IDX[*,DREC] = DET_REC
    
  ENDFOR

;---------------------------------------
; CLOSE THE FILE

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS L1B DETECTOR: CLOSING PRODUCTS AND RELEASING THE LUN'
  CLOSE, PRD_DET
  FREE_LUN, PRD_DET

;----------------------------------------
; SWAP ENDIAN IF NEEDED - MERIS DATA IS BIG ENDIAN

  IF ENDIAN_SIZE EQ 0 THEN BEGIN
    DET_IDX   = SWAP_ENDIAN(DET_IDX)
  ENDIF

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'MERIS L1B DETECTOR: RETURNING MERIS DETECTOR INDEX'
  RETURN, DET_IDX

END
